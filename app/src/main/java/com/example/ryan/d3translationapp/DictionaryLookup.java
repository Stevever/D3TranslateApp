package com.example.ryan.d3translationapp;

import android.util.Log;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.Map;

import javax.net.ssl.HttpsURLConnection;

/**
 * File Created by Joseph on 4/12/16.
 *
 * This is a class that is used for calls to an online translation dictionary that uses JSON.
 * Information about the API being used can be found at https://glosbe.com/a-api
 *
 */
public class DictionaryLookup {

    static final String URL_PREFIX = "https://glosbe.com/gapi/translate?";
    static final String URL_FROMLANG_PARAM = "from=";
    static final String URL_TOLANG_PARAM = "&dest=";
    static final String URL_PHRASE_PARAM = "&phrase=";
    static final String URL_FORMAT_PARAM = "&format=json";

    static InputStream iStream = null;
    URL JSONurl;

    public DictionaryLookup(String fromLang, String toLang, String phrase){
        String url = urlMaker(fromLang, toLang, phrase);
        try {
            JSONurl = new URL(url);
        } catch (MalformedURLException ex) {
            ex.printStackTrace();
        }
    }

    /**
     * Returns the JSONObject generated by the glosbe API. See https://glosbe.com/a-api for more info
     *
     * @return  the JSONObject containing the translation info for this object's url
     * @see     JSONObject
     */
    public JSONObject getLookUpData() throws IOException {

        String line;
        String jsonString = "";

        HttpsURLConnection urlConnection = (HttpsURLConnection) JSONurl.openConnection();

        try {
            //HttpsURLConnection urlConnection = (HttpsURLConnection) url.openConnection();
            urlConnection.setRequestMethod("GET");
            urlConnection.connect();
            int status = urlConnection.getResponseCode();
            switch(status) {
                case 200:
                case 201:
                    BufferedReader br = new BufferedReader(new InputStreamReader(urlConnection.getInputStream()));
                    StringBuilder stringBuilder = new StringBuilder();

                    while ((line = br.readLine()) != null){
                        stringBuilder.append(line + '\n');
                    }
                    jsonString = stringBuilder.toString();
            }
        } finally{
                urlConnection.disconnect();
        }

        JSONObject jsonObject = null;
        try {
            jsonObject = new JSONObject(jsonString);
        } catch (JSONException e) {
            e.printStackTrace();
        }

        return jsonObject;
    }

    public String urlMaker(String fromLang, String toLang, String phrase){
        return URL_PREFIX + URL_FROMLANG_PARAM + fromLang + URL_TOLANG_PARAM + toLang + URL_FORMAT_PARAM + URL_PHRASE_PARAM + phrase;
    }

}
